services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: romaneio_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: romaneio
      POSTGRES_USER: romaneio_user
      POSTGRES_PASSWORD: romaneio_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - romaneio_network

  # Backend Laravel
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: romaneio_backend
    restart: unless-stopped
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: romaneio
      DB_USERNAME: romaneio_user
      DB_PASSWORD: romaneio_password
      APP_ENV: local
      APP_DEBUG: true
      APP_URL: http://localhost:8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - postgres
    networks:
      - romaneio_network
    command: >
      sh -c "
        composer install &&
        php artisan key:generate &&
        php artisan migrate --force &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: romaneio_frontend
    restart: unless-stopped
    # Configurações de recursos para aumentar o tamanho do container
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1.5G
        reservations:
          cpus: '0.5'
          memory: 512M
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - romaneio_network
    environment:
      - VITE_API_URL=http://localhost:8000

  # Nginx (opcional - para produção)
  nginx:
    image: nginx:alpine
    container_name: romaneio_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - romaneio_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  romaneio_network:
    driver: bridge 